server {
    listen      80;
    server_name ${SERVER_NAME,,};
    return      301 https://$server_name$request_uri;
    client_max_body_size 2000M;
}

map $http_upgrade $type {
  default "web";
  websocket "ws";
}


upstream ${APP_NAME,,}gunicorn {
  #server localhost:8001;
  server unix:${APP_DIR}/run/gunicorn.sock;
}

upstream ${APP_NAME,,}daphne {
  #server unix:/webapps/test/run/daphne.sock fail_timeout=0;
  server localhost:8002;
}

server {
  listen              443 ssl;
  server_name         ${SERVER_NAME,,};
  add_header          Strict-Transport-Security "max-age=31536000";

  client_body_in_file_only clean;
  client_body_buffer_size 32K;

  client_max_body_size 2000M;

  sendfile on;
  send_timeout 900s;

  access_log ${LOG_DIR}/nginx-access.log;
  error_log  ${LOG_DIR}/nginx-error.log;


  location / {
    try_files /nonexistent @$type;
  }

  location /static/ {
    alias ${APP_DIR}/static/;
  }

  location /media/ {
    alias ${APP_DIR}/media/;
  }

  #location /protected/ {
  #  internal;
  #  alias   ${APP_DIR}/docs/site/;
  #}

  location @ws {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_http_version 1.1;
    #proxy_pass http://unix:/webapps/test/run/daphne.sock:/;
    proxy_pass http://${APP_NAME,,}daphne;
    client_max_body_size 2000M;

  }

  location @web {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_http_version 1.1;
    #proxy_pass http://unix:/webapps/test/run/daphne.sock:/;
    proxy_pass http://${APP_NAME,,}gunicorn;
    client_max_body_size 2000M;

  }


  error_page 500 502 503 504 /500.html;
  location = /500.html {
    root ${APP_DIR}/static/;
  }

  ssl                         on;
  ssl_stapling                on;
  ssl_stapling_verify         on;
  ssl_session_timeout         5m;
  ssl_certificate             /etc/letsencrypt/live/${SERVER_NAME,,}/fullchain.pem;
  ssl_certificate_key         /etc/letsencrypt/live/${SERVER_NAME,,}/privkey.pem;
  ssl_trusted_certificate     /etc/letsencrypt/live/${SERVER_NAME,,}/fullchain.pem;

}
